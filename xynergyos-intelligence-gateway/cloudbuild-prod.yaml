# Cloud Build configuration for PROD environment
# Triggered on git tags (v1.0.0, v1.0.1, etc.)
#
# Setup trigger:
# gcloud builds triggers create github \
#   --name="gateway-prod-deploy" \
#   --repo-name="xynergy-core" \
#   --repo-owner="your-org" \
#   --tag-pattern="^v[0-9]+\.[0-9]+\.[0-9]+$" \
#   --build-config="xynergyos-intelligence-gateway/cloudbuild-prod.yaml" \
#   --included-files="xynergyos-intelligence-gateway/**" \
#   --project=xynergy-dev-1757909467

steps:
  # Install dependencies
  - name: 'node:20'
    entrypoint: npm
    args: ['ci']
    dir: 'xynergyos-intelligence-gateway'

  # Run tests (if you have them)
  # - name: 'node:20'
  #   entrypoint: npm
  #   args: ['test']
  #   dir: 'xynergyos-intelligence-gateway'

  # Run TypeScript compilation
  - name: 'node:20'
    entrypoint: npm
    args: ['run', 'build']
    dir: 'xynergyos-intelligence-gateway'

  # Build Docker image with version tagging
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway:prod'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway:$TAG_NAME'
      - '-t'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway:prod-$SHORT_SHA'
      - '.'
    dir: 'xynergyos-intelligence-gateway'

  # Push all tags to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway'

  # Deploy to Cloud Run (PROD) - NO TRAFFIC initially
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'xynergyos-intelligence-gateway-prod'
      - '--image=us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway:$TAG_NAME'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=NODE_ENV=production,XYNERGY_ENV=prod,MOCK_MODE=false'
      - '--set-secrets=JWT_SECRET=jwt-secret-prod:latest,SLACK_CLIENT_SECRET=slack-secret-prod:latest,GMAIL_CLIENT_SECRET=gmail-secret-prod:latest'
      - '--memory=512Mi'
      - '--cpu=1'
      - '--min-instances=1'
      - '--max-instances=50'
      - '--timeout=300'
      - '--concurrency=80'
      - '--vpc-connector=redis-connector'
      - '--vpc-egress=private-ranges-only'
      - '--no-traffic' # Deploy without traffic for safety

  # Output deployment info
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "========================================="
        echo "✅ PRODUCTION DEPLOYMENT COMPLETE"
        echo "========================================="
        echo "Version: $TAG_NAME"
        echo "Image: us-central1-docker.pkg.dev/$PROJECT_ID/xynergy-services/xynergyos-intelligence-gateway:$TAG_NAME"
        echo ""
        echo "⚠️  NEW REVISION DEPLOYED WITH NO TRAFFIC"
        echo ""
        echo "Next steps to roll out traffic:"
        echo "1. Test the canary URL"
        echo "2. Gradually roll out:"
        echo "   gcloud run services update-traffic xynergyos-intelligence-gateway-prod --to-latest --region=us-central1 --project=$PROJECT_ID"
        echo "========================================="

# Build configuration
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Timeout
timeout: '1200s' # 20 minutes

# Substitutions (optional - for manual triggers)
substitutions:
  _SERVICE_NAME: 'xynergyos-intelligence-gateway-prod'
  _REGION: 'us-central1'
